/**
 * Created by mark on 11/12/2015.
 */

module.exports = function (app, fs) {
    app.post('/api/getProduct',function (req, res) {
        var path = './data/products/'+ req.body.lang + '-' + req.body.slug + '.json';
        fs.readFile(path, 'utf8', function (err, data) {
            if (err) {
                console.error(err);
                res.send({error : 'No such product.'});
            }
            else {
                var obj = JSON.parse(data);
                res.send(obj);
            }

        });
        //try {
        //    var query = productsSchema.find({
        //        slug : req.body.slug,
        //        lang : req.body.lang
        //    }).exec(function (err, docs) {
        //        if (!err) {
        //            if(docs.length == 1) {
        //                res.send({error : false, data : docs[0], message : "success"}).end();
        //            }
        //            else {
        //                res.send({error : true, message : "product-error", code : "pe1"}).end();
        //            }
        //        }
        //        else {
        //            console.log('error');
        //        }
        //    })
        //}
        //catch (err) {
        //    console.error(err);
        //}
    });
    //app.post('*', function (req, res) {
    //    res.sendFile('index.html', { root: '././files/' });
    //});
    //app.get('*', function (req, res) {
    //    res.sendFile('index.html', { root: '././files/' });
    //});
    app.get('*', function (req, res) {
        var userAgent = uaParser.parse(req.headers['user-agent']).userAgent.family;
        console.log('agent - ' + userAgent);
        if (userAgent != 'Googlebot' && userAgent != 'bingbot' && userAgent != 'Slurp' && userAgent != 'FacebookBot') {
            res.sendFile('index.html', { root: '././files/' });
        }
        else {
            console.log('bot - ' + userAgent);
            exports.botHack(req, res);
            //exports.botHack(req, res); req._parsedOriginalUrl.pathname == '/' &&
        }
    });

    app.post('*', function (req, res) {
        var userAgent = uaParser.parse(req.headers['user-agent']).userAgent.family;
        console.log('agent - ' + userAgent);
        if (userAgent != 'Googlebot' && userAgent != 'bingbot' && userAgent != 'Slurp' && userAgent.indexOf('Facebook') == -1 && userAgent.indexOf('facebookexternalhit/1.1') == -1 && userAgent != 'Facebot') {
            res.sendFile('index.html', { root: '././files/' });
        }
        else {
            console.log('bot - ' + userAgent);
            exports.botHack(req, res);
            //exports.botHack(req, res); req._parsedOriginalUrl.pathname == '/' &&
        }
    });
};


exports.botHack = function (req, res) {
    var userAgent = uaParser.parse(req.headers['user-agent']).userAgent.family;
    var renderObject = {
        test : "test-dev"
    };
    try {
        if (req.url == '') {
            console.log("bot / main");
            req.route.path = 'main';
        }
        else if (req.url == '/') {
            console.log("bot / main");
            req.route.path = 'main';
        }
        else if (req.url.indexOf('product') > -1) {
            console.log("bot / product");
            req.route.path = 'product';
        }
        else if (req.url.indexOf('enterprises') > -1) {
            console.log("bot / enterprises");
            req.route.path = 'enterprices';
        }
        else if (req.url.indexOf('aboutus') > -1) {
            console.log("bot / aboutus");
            req.route.path = 'aboutus';
        }
        else if (req.url.indexOf('termsofuse') > -1) {
        }
        else if (req.url.indexOf('privacy') > -1) {
        }
        else if (req.url.indexOf('signup') > -1) {
        }
        else if (req.url.indexOf('genre') > -1) {
        }
        else if (req.url.indexOf('article') > -1) {
        }
        else {
            req.route.path = 'main';
            console.log("bot / other");
        }
        var routeName = req.route.path.indexOf(':') === -1 ? req.route.path : req.route.path.substring(0, req.route.path.indexOf(":") - 1);
        console.log(routeName);
        exports.renderer(req, res, renderObject, routeName);
    }
    catch (e) {
        console.log({'level': 'ERROR', 'message': e});
    }
}

exports.renderer = function (req, res, rendererObject, from) {
    try {
        var builderObject = {}, path, platformData = {}, lang_links=[];
        switch (from) {
            case 'main':
                builderObject.seo = {
                    title: "Huawei Armenia",
                    meta_description: "description - main",
                    url: 'http://' + req.hostname + '' + req.url,
                    hostname: 'http://' + req.hostname + '',
                    lang_links: [{
                        href : 'http://' + req.hostname + '/en/' + req.url,
                        lang : 'en'
                    }, {
                        href : 'http://' + req.hostname + '/en/' + req.url,
                        lang : 'ru'
                    }, {
                        href : 'http://' + req.hostname + '/en/' + req.url,
                        lang : 'hy'
                    }]
                    //image: ""
                    //,
                    //lang: req.body.locale
                }
                path = 'main';//'main';
                break;
            case 'enterprises':
                builderObject.seo = {
                    title: "Huawei Armenia",
                    meta_description: "description - enterprises",
                    url: 'http://' + req.hostname + '' + req.url,
                    hostname: 'http://' + req.hostname + '',
                    //image: ""
                    //,
                    //lang: req.body.locale
                }
                path = 'enterprises';
                break;
        }
        console.log(__dirname, path, 'botView/' + path + '.html');
        res.render('' + path + '.html', {data: builderObject}, function (error, html) {
            if (!error) {
                res.end(html);
                //res.end();
                return;
            }
            //logger.log({'level': 'WARN', 'message': 'Share Router conflict in Bot Request'});
            //logger.close();
            else {
                console.error("renderer error : " + error);
            }
            return;
        });
    }
    catch (e) {
        console.log(e);
    }
}